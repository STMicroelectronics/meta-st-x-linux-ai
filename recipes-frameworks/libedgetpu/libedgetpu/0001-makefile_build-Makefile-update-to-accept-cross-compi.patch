From 77bf5df8653282f254f9265264d308309ea9dfc8 Mon Sep 17 00:00:00 2001
From: Vincent ABRIOU <vincent.abriou@st.com>
Date: Thu, 20 Jan 2022 11:43:17 +0100
Subject: [PATCH 1/3] makefile_build: Makefile: update to accept cross
 compilation options

This update is needed to allow libedgetpu build within a Yocto build system.
Linking command line may differ to avoid undefined reference when the
generated libedgetpu libraries are link with applications.

Signed-off-by: Vincent ABRIOU <vincent.abriou@st.com>
---
 makefile_build/Makefile | 91 ++++++++++++++++++++++++++---------------
 1 file changed, 58 insertions(+), 33 deletions(-)

diff --git a/makefile_build/Makefile b/makefile_build/Makefile
index ef7d290..2f95342 100644
--- a/makefile_build/Makefile
+++ b/makefile_build/Makefile
@@ -10,37 +10,62 @@ BUILDROOT ?= $(MAKEFILE_DIR)/..
 BUILDDIR := $(BUILDROOT)/out
 TOBUILDDIR = $(addprefix $(BUILDDIR)/,$(1))
 MKDIR = if [ ! -d $(dir $@) ]; then mkdir -p $(dir $@); fi
-CC=gcc
-CXX=g++
+
+ifeq ($(origin CC), undefined)
+	CC := gcc
+endif
+ifeq ($(origin CXX), undefined)
+	CXX := gcc
+endif
+
 FLATC=flatc
 
 LIBEDGETPU_CFLAGS := \
 	-fPIC \
 	-Wall \
-	-std=c99
+	-std=c99 \
+	$(EXTRA_CFLAGS)
 
 LIBEDGETPU_CXXFLAGS := \
 	-fPIC \
 	-Wall \
 	-std=c++14 \
-	-DDARWINN_PORT_DEFAULT
+	-DDARWINN_PORT_DEFAULT \
+	$(EXTRA_CXXFLAGS)
+
+ABSL_LDFLAGS  = \
+	-labsl_flags \
+	-labsl_flags_marshalling \
+	-labsl_hashtablez_sampler \
+	-labsl_str_format_internal \
+	-labsl_throw_delegate \
+	-labsl_synchronization \
+	-labsl_time \
+	-labsl_time_zone \
+	-labsl_int128 \
+	-labsl_symbolize \
+	-labsl_base \
+	-labsl_debugging_internal \
+	-labsl_malloc_internal \
+	-labsl_spinlock_wait \
+	-labsl_demangle_internal \
+	-labsl_hash \
+	-labsl_flags_config \
+	-labsl_flags_internal \
+	-labsl_flags_parse \
+	-labsl_strings \
+	-labsl_graphcycles_internal \
+	-labsl_stacktrace \
+	-labsl_raw_hash_set \
+	-labsl_bad_optional_access
 
 LIBEDGETPU_LDFLAGS := \
 	-Wl,-Map=$(BUILDDIR)/output.map \
-	-shared \
-	-Wl,--soname,libedgetpu.so.1 \
 	-Wl,--version-script=$(BUILDROOT)/tflite/public/libedgetpu.lds \
 	-fuse-ld=gold \
 	-lflatbuffers \
-	-labsl_flags \
-	-labsl_flags_internal \
-	-labsl_flags_reflection \
-	-labsl_flags_marshalling \
-	-labsl_hash \
-	-labsl_hashtablez_sampler \
-	-labsl_raw_hash_set \
-	-labsl_str_format_internal \
-	-lusb-1.0
+	-lusb-1.0 \
+	$(ABSL_LDFLAGS)
 
 LIBEDGETPU_FLATC_SRCS := \
 	$(BUILDROOT)/executable/executable.fbs \
@@ -59,9 +84,6 @@ LIBEDGETPU_INCLUDES := \
 	$(BUILDDIR)/$(BUILDROOT)
 LIBEDGETPU_INCLUDES := $(addprefix -I,$(LIBEDGETPU_INCLUDES))
 
-LIBEDGETPU_CSRCS := $(TFROOT)/tensorflow/lite/c/common.c
-LIBEDGETPU_COBJS := $(call TOBUILDDIR,$(patsubst %.c,%.o,$(LIBEDGETPU_CSRCS)))
-
 LIBEDGETPU_CCSRCS := \
 	$(BUILDROOT)/api/allocated_buffer.cc \
 	$(BUILDROOT)/api/buffer.cc \
@@ -140,7 +162,8 @@ LIBEDGETPU_CCSRCS := \
 	$(BUILDROOT)/tflite/edgetpu_c.cc \
 	$(BUILDROOT)/tflite/edgetpu_delegate_for_custom_op.cc \
 	$(BUILDROOT)/tflite/edgetpu_delegate_for_custom_op_tflite_plugin.cc \
-	$(TFROOT)/tensorflow/lite/util.cc
+	$(TFROOT)/tensorflow/lite/util.cc \
+	$(TFROOT)/tensorflow/lite/c/common.cc
 LIBEDGETPU_CCOBJS := $(call TOBUILDDIR,$(patsubst %.cc,%.o,$(LIBEDGETPU_CCSRCS)))
 
 # In order to support direct and throttled mode - we need to compile two files
@@ -155,9 +178,18 @@ LIBEDGETPU_STD_CCSRCS := \
 	$(BUILDROOT)/tflite/edgetpu_manager_direct.cc
 LIBEDGETPU_STD_CCOBJS := $(call TOBUILDDIR,$(patsubst %.cc,%-throttled.o,$(LIBEDGETPU_STD_CCSRCS)))
 
+LIBEDGETPU_MAX_NAME := libedgetpu-max.so.$(LIBEDGETPU_VERSION)
+LIBEDGETPU_STD_NAME := libedgetpu-std.so.$(LIBEDGETPU_VERSION)
+
+LIBEDGETPU_NAME_MAJOR := libedgetpu.so.$(LIBEDGETPU_VERSION_MAJOR)
+
+LIBDIR := $(BUILDDIR)/lib
+LIBEDGETPU_MAX_PATH := $(LIBDIR)/$(LIBEDGETPU_MAX_NAME)
+LIBEDGETPU_STD_PATH := $(LIBDIR)/$(LIBEDGETPU_STD_NAME)
+
 .PHONY: libedgetpu
 
-all: libedgetpu libedgetpu-throttled
+all:  | firmware $(LIBEDGETPU_FLATC_OBJS) libedgetpu libedgetpu-throttled
 
 clean:
 	rm -rf $(BUILDDIR)
@@ -181,11 +213,6 @@ firmware:
 	@echo "} // namespace" >> $(LIBEDGETPU_FW_OUTPUT)
 
 
-$(LIBEDGETPU_COBJS) : $(BUILDDIR)/%.o: %.c
-	@$(MKDIR)
-	@echo "Compiling $<"
-	@$(CC) $(LIBEDGETPU_CFLAGS) $(LIBEDGETPU_INCLUDES) -c $< -MD -MT $@ -MF $(@:%o=%d) -o $@
-
 $(LIBEDGETPU_CCOBJS) : $(BUILDDIR)/%.o: %.cc
 	@$(MKDIR)
 	@echo "Compiling $<"
@@ -201,14 +228,12 @@ $(LIBEDGETPU_STD_CCOBJS) : $(BUILDDIR)/%-throttled.o: %.cc
 	@echo "Compiling $<"
 	@$(CXX) -DTHROTTLE_EDGE_TPU $(LIBEDGETPU_CXXFLAGS) $(LIBEDGETPU_INCLUDES) -c $< -MD -MT $@ -MF $(@:%o=%d) -o $@
 
-libedgetpu: | firmware $(LIBEDGETPU_FLATC_OBJS) $(LIBEDGETPU_COBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_MAX_CCOBJS)
-	@mkdir -p $(BUILDDIR)/direct/k8
+libedgetpu: $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_MAX_CCOBJS)
+	@mkdir -p $(LIBDIR)
 	@echo "Building libedgetpu.so"
-	@$(CXX) $(LIBEDGETPU_CCFLAGS) $(LIBEDGETPU_LDFLAGS) $(LIBEDGETPU_COBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_MAX_CCOBJS) -o $(BUILDDIR)/direct/k8/libedgetpu.so.1.0
-	@ln -sf $(BUILDDIR)/direct/k8/libedgetpu.so.1.0 $(BUILDDIR)/direct/k8/libedgetpu.so.1
+	@$(CXX) -shared $^ -o $(LIBEDGETPU_MAX_PATH) $(LIBEDGETPU_LDFLAGS) -Wl,-soname,$(LIBEDGETPU_NAME_MAJOR)
 
-libedgetpu-throttled: | firmware $(LIBEDGETPU_FLATC_OBJS) $(LIBEDGETPU_COBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_STD_CCOBJS)
-	@mkdir -p $(BUILDDIR)/throttled/k8
+libedgetpu-throttled: $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_STD_CCOBJS)
+	@mkdir -p $(LIBDIR)
 	@echo "Building throttled libedgetpu.so"
-	@$(CXX) $(LIBEDGETPU_CCFLAGS) $(LIBEDGETPU_LDFLAGS) $(LIBEDGETPU_COBJS) $(LIBEDGETPU_CCOBJS) $(LIBEDGETPU_STD_CCOBJS) -o $(BUILDDIR)/throttled/k8/libedgetpu.so.1.0
-	@ln -sf $(BUILDDIR)/throttled/k8/libedgetpu.so.1.0 $(BUILDDIR)/throttled/k8/libedgetpu.so.1
+	@$(CXX) -shared $^ -o $(LIBEDGETPU_STD_PATH) $(LIBEDGETPU_LDFLAGS) -Wl,-soname,$(LIBEDGETPU_NAME_MAJOR)
-- 
2.25.1

